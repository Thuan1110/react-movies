{"version":3,"file":"static/js/315.450d3291.chunk.js","mappings":"mMACA,EAAuB,6BAAvB,EAA2D,6B,SC0B3D,EApBuB,SAACA,GACtB,IAAQC,EAAoCD,EAApCC,GAAIC,EAAgCF,EAAhCE,MAAOC,EAAyBH,EAAzBG,WAAYC,EAAaJ,EAAbI,SACzBC,EAAYC,EAAAA,GAAW,IAAMH,EAE7BI,GAAWC,EAAAA,EAAAA,MAMjB,OACE,eAAIC,UAAWC,EAAf,UACE,UAACC,EAAA,EAAD,CAAMF,UAAWC,EAAaE,QANf,WACjBL,EAAS,IAAD,OAAKH,EAAL,YAAiBH,GAC1B,EAIG,WACE,gBAAKY,IAAKR,EAAWS,IAAI,kBACzB,uBAAIZ,QAHyBD,EAOpC,ECxBD,EAAyB,2BAAzB,EAA0D,wBAA1D,EAA0F,0BAA1F,EAA6H,2BAA7H,EAAoK,8BCmCpK,EA/BmB,SAACD,GAClB,IAAQe,EAA4Bf,EAA5Be,OAAQX,EAAoBJ,EAApBI,SAAUF,EAAUF,EAAVE,MACtBc,EAAO,GAMX,OAJEA,EADe,UAAbZ,EACK,SAEA,OAGP,iBAAKK,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,cAAGD,UAAWC,EAAd,SAA6BR,KAC7B,SAAC,KAAD,CAAMe,GAAE,WAAMD,GAAQP,UAAWC,EAAjC,UACE,cAAGD,UAAWC,EAAd,6BAGJ,wBACGK,EAAOG,KAAI,SAACC,GAAD,OACV,SAAC,EAAD,CAEElB,GAAIkB,EAAMlB,GACVC,MAAOiB,EAAMjB,MAAQiB,EAAMjB,MAAQiB,EAAMC,KACzCjB,WAAYgB,EAAME,YAClBjB,SAAUA,GAJLe,EAAMlB,GAFH,QAYnB,C,mECjCD,EAAuB,mB,SCavB,EAXa,SAACD,GACZ,OACE,oBACES,UAAS,UAAKC,EAAL,YAAoBV,EAAMS,UAAYT,EAAMS,UAAY,IACjEG,QAASZ,EAAMY,QAFjB,SAIGZ,EAAMsB,UAGZ,C,gICZM,IAAMC,EAAU,mCACVC,EAAW,+BACXlB,EAAW,kCACXmB,EAAgB,qC,8ECHtB,IAAMrB,EAAW,CACtBe,MAAO,QACPO,GAAI,MAEOC,EAAY,CACvBC,SAAU,YACVC,QAAS,U,4EC4DX,IAhEiB,SAACC,GAChB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAgCN,EAAAA,EAAAA,UAAS,IAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAAwBR,EAAAA,EAAAA,UAAS,GAAjC,eAAOS,EAAP,KAAaC,EAAb,MAGAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,yCAAG,oGAChBV,GAAa,GACbE,EAAS,MAFO,kBAISS,MAAM,GAAD,OAAId,EAAJ,iBAAgBU,IAJ9B,WAIRK,EAJQ,QAKAC,GALA,sBAMN,IAAIC,MAAM,yBANJ,wBAQKF,EAASG,OARd,QAQRC,EARQ,OASRC,EAAiBD,EAAKE,QAAQC,MAAM,EAAG,GAC7Cf,EAAYa,GAVE,kDAYdf,EAAS,KAAIkB,SAZC,QAchBpB,GAAa,GAdG,0DAAH,qDAiBTqB,EAAW,yCAAG,kGAClBrB,GAAa,GACbE,EAAS,MAFS,kBAKQS,MAAM,GAAD,OAAId,EAAJ,iBAAgBU,IAL7B,WAKVe,EALU,QAODT,GAPC,sBAQR,IAAIC,MAAM,yBARF,wBAUGQ,EAAUP,OAVb,QAUVC,EAVU,OAWhBV,GAAY,SAACiB,GACX,MAAM,GAAN,eAAWA,IAAX,OAA0BP,EAAKE,SAChC,IAbe,kDAehBhB,EAAS,KAAIkB,SAfG,QAiBlBpB,GAAa,GAjBK,0DAAH,qDAoBjBU,IACAW,GACD,GAAE,CAACd,EAAMV,IAOV,MAAO,CACLM,SAAAA,EACAJ,UAAAA,EACAE,MAAAA,EACAI,SAAAA,EACAmB,gBAVsB,WAClBjB,EA7CW,KA8CfC,GAAQ,SAACiB,GAAD,OAAcA,EAAW,CAAzB,GACT,EASF,C,uKC/DD,EAAyB,4BAAzB,EAAkE,gCAAlE,EAA+G,gCAA/G,EAA0J,8BAA1J,EAAgM,2BAAhM,EAAyO,iCAAzO,EAAgR,yBAAhR,EAAkT,4BAAlT,EAAqV,0B,SCgErV,EAtDoB,SAAC1D,GACnB,IAAQe,EAAWf,EAAXe,OACFR,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAAC,KAAD,CACEmD,aAAc,GACdC,gBAAgB,EAChBC,SAAU,CACRC,MAAO,KACPC,sBAAsB,GAExBC,QAAS,CAACC,EAAAA,GAAUC,EAAAA,GAAYC,EAAAA,IAPlC,SASGpD,EAAOG,KAAI,SAACC,GAAD,OACV,UAAC,KAAD,CAAaV,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXG,IAAKY,EAAAA,GAAgB,IAAMN,EAAMiD,cACjCtD,IAAKK,EAAMjB,SAEb,iBAAKO,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,oBAASD,UAAWC,EAApB,UACE,uBAAIS,EAAMjB,WAEZ,oBAASO,UAAWC,EAApB,UACE,uBAAIS,EAAMkD,cAGZ,mBACEzD,QAAS,kBAAML,EAAS,UAAD,OAAWY,EAAMlB,IAA/B,EACTQ,UAAWC,EAFb,2BAOF,gBAAKD,UAAWC,EAAhB,UACE,SAACC,EAAA,EAAD,CAAMF,UAAWC,EAAjB,UACE,gBACEG,IAAKP,EAAAA,GAAW,IAAMa,EAAME,YAC5BP,IAAI,0BA1B8BK,EAAMlB,GADxC,OAqCnB,E,4BCWD,EAnEa,WACX,OAAwC8B,EAAAA,EAAAA,UAAS,IAAjD,eAAOuC,EAAP,KAAqBC,EAArB,KACA,GAA0CxC,EAAAA,EAAAA,UAAS,IAAnD,eAAOyC,EAAP,KAAsBC,EAAtB,KACA,GAA4C1C,EAAAA,EAAAA,UAAS,IAArD,eAAO2C,EAAP,KAAuBC,EAAvB,KACA,GAAkC5C,EAAAA,EAAAA,UAAS,IAA3C,eAAO6C,EAAP,KAAkBC,EAAlB,KACA,GAAoC9C,EAAAA,EAAAA,UAAS,IAA7C,eAAO+C,EAAP,KAAmBC,EAAnB,KAEA,GAAuCC,EAAAA,EAAAA,GAAS,GAAD,OAC1CxD,EAAAA,GAD0C,YAC9BpB,EAAAA,EAAAA,MAD8B,YACZuB,EAAAA,EAAAA,QADY,oBACiBJ,EAAAA,GADjB,oBAAvCa,EAAR,EAAQA,SAAUF,EAAlB,EAAkBA,MAAOF,EAAzB,EAAyBA,UAIPiD,GAAkBD,EAAAA,EAAAA,GAAS,GAAD,OACvCxD,EAAAA,GADuC,YAC3BpB,EAAAA,EAAAA,MAD2B,YACTuB,EAAAA,EAAAA,SADS,oBACqBJ,EAAAA,GADrB,oBAApCa,SAIU8C,GAAeF,EAAAA,EAAAA,GAAS,GAAD,OACpCxD,EAAAA,GADoC,YACxBpB,EAAAA,EAAAA,GADwB,YACTuB,EAAAA,EAAAA,QADS,oBACoBJ,EAAAA,GADpB,oBAAjCa,SAIU+C,GAAeH,EAAAA,EAAAA,GAAS,GAAD,OACpCxD,EAAAA,GADoC,YACxBpB,EAAAA,EAAAA,GADwB,YACTuB,EAAAA,EAAAA,SADS,oBACqBJ,EAAAA,GADrB,oBAAjCa,SAYR,OARAM,EAAAA,EAAAA,YAAU,WACR6B,EAAgBnC,GAChBqC,EAAiBrC,GACjBuC,EAAkBM,GAClBJ,EAAaK,GACbH,EAAcI,EACf,GAAE,CAAC/C,EAAU6C,EAAeC,EAAYC,KAGvC,gCACGjD,IAAS,gBAAKzB,UAAU,WAAf,SAA2ByB,KACnCF,IACA,4BACE,SAAC,EAAD,CAAajB,OAAQuD,KACrB,SAACc,EAAA,EAAD,CACErE,OAAQyD,EACRpE,SAAUA,EAAAA,EAAAA,MACViF,KAAM1D,EAAAA,EAAAA,QACNzB,MAAM,oBAER,SAACkF,EAAA,EAAD,CACErE,OAAQ2D,EACRtE,SAAUA,EAAAA,EAAAA,MACViF,KAAM1D,EAAAA,EAAAA,SACNzB,MAAM,sBAER,SAACkF,EAAA,EAAD,CACErE,OAAQ6D,EACRxE,SAAUA,EAAAA,EAAAA,GACViF,KAAM1D,EAAAA,EAAAA,QACNzB,MAAM,sBAER,SAACkF,EAAA,EAAD,CACErE,OAAQ+D,EACR1E,SAAUA,EAAAA,EAAAA,GACViF,KAAM1D,EAAAA,EAAAA,SACNzB,MAAM,4BAMjB,C","sources":["webpack://react-movies/./src/components/Movies/Item/MoviesListItem.module.css?e30d","components/Movies/Item/MoviesListItem.js","webpack://react-movies/./src/components/Movies/List/MoviesList.module.css?6fec","components/Movies/List/MoviesList.js","webpack://react-movies/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","config/api-config.js","config/movie-type.js","hooks/use-fetch.js","webpack://react-movies/./src/components/Movies/List/MovieSlider.module.css?345d","components/Movies/List/MovieSlider.js","pages/Home.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"MoviesListItem_item__nwcOR\",\"card\":\"MoviesListItem_card__2k9-x\",\"link\":\"MoviesListItem_link__34khC\"};","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IMG_PATH } from \"../../../config/api-config\";\r\nimport Card from \"../../UI/Card\";\r\n\r\nimport styles from \"./MoviesListItem.module.css\";\r\n\r\nconst MoviesListItem = (props) => {\r\n  const { id, title, posterPath, category } = props;\r\n  const imagePath = IMG_PATH + \"/\" + posterPath;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const navigation = () => {\r\n    navigate(`/${category}/${id}`);\r\n  };\r\n\r\n  return (\r\n    <li className={styles.item} key={id}>\r\n      <Card className={styles.card} onClick={navigation}>\r\n        <img src={imagePath} alt=\"movie images\" />\r\n        <p>{title}</p>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MoviesListItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movies\":\"MoviesList_movies__nZF87\",\"sub\":\"MoviesList_sub__yBgEX\",\"title\":\"MoviesList_title__TSR3T\",\"action\":\"MoviesList_action__fdqQ9\",\"link-text\":\"MoviesList_link-text__F3DwE\"};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MoviesListItem from \"../Item/MoviesListItem\";\r\nimport styles from \"./MoviesList.module.css\";\r\n\r\nconst MoviesList = (props) => {\r\n  const { movies, category, title } = props;\r\n  let link = \"\";\r\n  if (category === \"movie\") {\r\n    link = \"movies\";\r\n  } else {\r\n    link = \"tvs\";\r\n  }\r\n  return (\r\n    <div className={styles.movies}>\r\n      <div className={styles.sub}>\r\n        <p className={styles.title}>{title}</p>\r\n        <Link to={`/${link}`} className={styles[\"link-text\"]}>\r\n          <p className={styles.action}>View More</p>\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <MoviesListItem\r\n            key={movie.id}\r\n            id={movie.id}\r\n            title={movie.title ? movie.title : movie.name}\r\n            posterPath={movie.poster_path}\r\n            category={category}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__pxqgE\"};","import React from \"react\";\r\nimport styles from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <section\r\n      className={`${styles.card} ${props.className ? props.className : \"\"}`}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","export const API_KEY = \"5e00f70ef1569dd8369c628b4c45f718\";\r\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\r\nexport const IMG_PATH = \"https://image.tmdb.org/t/p/w500\";\r\nexport const ORIGINAL_PATH = \"https://image.tmdb.org/t/p/original\";\r\n","export const category = {\r\n  movie: \"movie\",\r\n  tv: \"tv\",\r\n};\r\nexport const movieType = {\r\n  topRated: \"top_rated\",\r\n  popular: \"popular\",\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [dataList, setDataList] = useState([]);\r\n  const [dataGrid, setDataGrid] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const MAX_PAGE = 500;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(`${url}&page=${page}`);\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const data = await response.json();\r\n        const firstSixMovies = data.results.slice(0, 6);\r\n        setDataList(firstSixMovies);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    const fetchMovies = async () => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const responses = await fetch(`${url}&page=${page}`);\r\n\r\n        if (!responses.ok) {\r\n          throw new Error(\"Something went wrong!\");\r\n        }\r\n        const data = await responses.json();\r\n        setDataGrid((prevMovies) => {\r\n          return [...prevMovies, ...data.results];\r\n        });\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n    fetchMovies();\r\n  }, [page, url]);\r\n\r\n  const loadMoreHandler = () => {\r\n    if (page > MAX_PAGE) return;\r\n    setPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  return {\r\n    dataList,\r\n    isLoading,\r\n    error,\r\n    dataGrid,\r\n    loadMoreHandler,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"swiper\":\"MovieSlider_swiper__ChlpM\",\"background\":\"MovieSlider_background__fZEeU\",\"text-block\":\"MovieSlider_text-block__iwGqX\",\"overview\":\"MovieSlider_overview__bmynf\",\"title\":\"MovieSlider_title__Q6WX4\",\"description\":\"MovieSlider_description__I9JFr\",\"btn\":\"MovieSlider_btn__omj7z\",\"poster\":\"MovieSlider_poster__TLwro\",\"card\":\"MovieSlider_card__V2LBB\"};","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Autoplay, Navigation, Pagination } from \"swiper\";\r\nimport \"swiper/css\";\r\nimport \"swiper/css/navigation\";\r\nimport \"swiper/css/pagination\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { IMG_PATH, ORIGINAL_PATH } from \"../../../config/api-config\";\r\nimport Card from \"../../UI/Card\";\r\nimport styles from \"./MovieSlider.module.css\";\r\n\r\nconst MovieSlider = (props) => {\r\n  const { movies } = props;\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <Swiper\r\n        spaceBetween={30}\r\n        centeredSlides={true}\r\n        autoplay={{\r\n          delay: 2500,\r\n          disableOnInteraction: false,\r\n        }}\r\n        modules={[Autoplay, Pagination, Navigation]}\r\n      >\r\n        {movies.map((movie) => (\r\n          <SwiperSlide className={styles.swiper} key={movie.id}>\r\n            <img\r\n              className={styles.background}\r\n              src={ORIGINAL_PATH + \"/\" + movie.backdrop_path}\r\n              alt={movie.title}\r\n            />\r\n            <div className={styles[\"text-block\"]}>\r\n              <div className={styles.overview}>\r\n                <section className={styles.title}>\r\n                  <p>{movie.title}</p>\r\n                </section>\r\n                <section className={styles.description}>\r\n                  <p>{movie.overview}</p>\r\n                </section>\r\n\r\n                <button\r\n                  onClick={() => navigate(`/movie/${movie.id}`)}\r\n                  className={styles.btn}\r\n                >\r\n                  Watch Now\r\n                </button>\r\n              </div>\r\n              <div className={styles.poster}>\r\n                <Card className={styles.card}>\r\n                  <img\r\n                    src={IMG_PATH + \"/\" + movie.poster_path}\r\n                    alt=\"movie images\"\r\n                  />\r\n                </Card>\r\n              </div>\r\n            </div>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieSlider;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MovieSlider from \"../components/Movies/List/MovieSlider\";\r\nimport MoviesList from \"../components/Movies/List/MoviesList\";\r\nimport { API_KEY, BASE_URL } from \"../config/api-config\";\r\nimport { category, movieType } from \"../config/movie-type\";\r\nimport useFetch from \"../hooks/use-fetch\";\r\n\r\nconst Home = () => {\r\n  const [moviesSlider, setMoviesSlider] = useState([]);\r\n  const [moviesPopular, setMoviesPopular] = useState([]);\r\n  const [moviesTopRated, setMoviesTopRated] = useState([]);\r\n  const [tvPopular, setTvPopular] = useState([]);\r\n  const [tvTopRated, setTvTopRated] = useState([]);\r\n\r\n  const { dataList, error, isLoading } = useFetch(\r\n    `${BASE_URL}/${category.movie}/${movieType.popular}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  const { dataList: moviesTopRate } = useFetch(\r\n    `${BASE_URL}/${category.movie}/${movieType.topRated}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  const { dataList: tvsPopular } = useFetch(\r\n    `${BASE_URL}/${category.tv}/${movieType.popular}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  const { dataList: tvsTopRate } = useFetch(\r\n    `${BASE_URL}/${category.tv}/${movieType.topRated}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n\r\n  useEffect(() => {\r\n    setMoviesSlider(dataList);\r\n    setMoviesPopular(dataList);\r\n    setMoviesTopRated(moviesTopRate);\r\n    setTvPopular(tvsPopular);\r\n    setTvTopRated(tvsTopRate);\r\n  }, [dataList, moviesTopRate, tvsPopular, tvsTopRate]);\r\n\r\n  return (\r\n    <>\r\n      {error && <div className=\"centered\">{error}</div>}\r\n      {!isLoading && (\r\n        <div>\r\n          <MovieSlider movies={moviesSlider} />\r\n          <MoviesList\r\n            movies={moviesPopular}\r\n            category={category.movie}\r\n            type={movieType.popular}\r\n            title=\"Popular movies\"\r\n          />\r\n          <MoviesList\r\n            movies={moviesTopRated}\r\n            category={category.movie}\r\n            type={movieType.topRated}\r\n            title=\"Top rated movies\"\r\n          />\r\n          <MoviesList\r\n            movies={tvPopular}\r\n            category={category.tv}\r\n            type={movieType.popular}\r\n            title=\"Popular TV shows\"\r\n          />\r\n          <MoviesList\r\n            movies={tvTopRated}\r\n            category={category.tv}\r\n            type={movieType.topRated}\r\n            title=\"Top rated TV shows\"\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["props","id","title","posterPath","category","imagePath","IMG_PATH","navigate","useNavigate","className","styles","Card","onClick","src","alt","movies","link","to","map","movie","name","poster_path","children","API_KEY","BASE_URL","ORIGINAL_PATH","tv","movieType","topRated","popular","url","useState","isLoading","setIsLoading","error","setError","dataList","setDataList","dataGrid","setDataGrid","page","setPage","useEffect","fetchData","fetch","response","ok","Error","json","data","firstSixMovies","results","slice","message","fetchMovies","responses","prevMovies","loadMoreHandler","prevPage","spaceBetween","centeredSlides","autoplay","delay","disableOnInteraction","modules","Autoplay","Pagination","Navigation","backdrop_path","overview","moviesSlider","setMoviesSlider","moviesPopular","setMoviesPopular","moviesTopRated","setMoviesTopRated","tvPopular","setTvPopular","tvTopRated","setTvTopRated","useFetch","moviesTopRate","tvsPopular","tvsTopRate","MoviesList","type"],"sourceRoot":""}